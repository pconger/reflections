Q:
What happens when you initialize a repository? Why do you need to do it?
A:
A git directory is created.
I need to do it to be able to commit my files.

Q:
How is the staging area different from the working directory and the repository? What value do you think it offers?
A:
The staging area has files that will be committed,
whereas the working directory has all the files I'm working on,
and the repository has all the file versions that have been committed.

Q:
How can you use the staging area to make sure you have one commit per logical change?
A:
I can run the git diff --staged command to compare the files in my staging area to the most recent commit.

Q:
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A:
When I want to try building alternative versions of my project.

Q:
How do the diagrams help you visualize the branch structure?
A:
I can see how the branches relate to each other
and see parents for each branch.

Q:
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
A:
Changes made in two branches are fused together into one branch.
The two literally come together.

Q:
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A:
Git uses strong logic to apply changes to the merged branch.
When there's a conflict I can make sure the appropriate changes are kept.
